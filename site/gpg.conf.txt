default-key 0x9DEA9987AE305ED4

# Riseup PGP best practices.

# when outputting certificates, view user IDs distinctly from keys:
fixed-list-mode

# short-keyids are trivially spoofed; it's easy to create a long-keyid
# collision; if you care about strong key identifiers, you always want
# to see the fingerprint:
keyid-format 0xlong
with-fingerprint

# when multiple digests are supported by all recipients, choose the
# strongest one:
personal-digest-preferences SHA512 SHA384 SHA256

# preferences chosen for new keys should prioritize stronger algorithms: 
default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES ZLIB ZIP Uncompressed

# If you use a graphical environment (and even if you don't) you should be using an agent:
# (similar arguments as  https://www.debian-administration.org/users/dkg/weblog/64)
use-agent

# You should always know at a glance which User IDs gpg thinks are legitimately bound to the keys in your keyring:
verify-options show-uid-validity
list-options show-uid-validity

# include an unambiguous indicator of which key made a signature:
# (see http://thread.gmane.org/gmane.mail.notmuch.general/3721/focus=7234)
sig-notation issuer-fpr@notations.openpgp.fifthhorseman.net=%g

# when making an OpenPGP certification, use a stronger digest than the default SHA1:
cert-digest-algo SHA512

# Use HKPS SKS server over to:
#   torify gpg --recv-keys ...
# Getting the cert:
#   curl -LO https://sks-keyservers.net/sks-keyservers.netCA.pem
#   SHA256:    0666ee848e03a48f3ea7bb008dbe9d63dfde280af82fb4412a04bf4e24cab36b
#   SHA512256: b8d043e869ca6a9857300ea9955380a7145b577a3c11e12890677a8ea7a8b5be
keyserver hkps://hkps.pool.sks-keyservers.net
keyserver-options ca-cert-file=/etc/ssl/certs/sks-keyservers.netCA.pem
keyserver-options no-honor-keyserver-url

